can i use existing interface to make things?
basically add_field will have to called and nouns will have to be highlighted.
on clicking the noun, if add_field is called on it, a new thing is to be created.

what modules will i need.

1)Things module - adapt existing node and thing,
so node and thing objects will continue. there are no nested mappings.
furthermore all field names are stored in a seperate index
which has autocomplete functionality.
can field be changed by a particular user type

thing descriptors:
example:
suppose i say "least number of patients"

-1 week


2)text parser module
should have methods to detect parts of speech.
to identify actions, and nouns, and simultaneously existing fields.
to identify plurality and singularity
is
is not
is greater than
is less than
is after
is before
is above
is below
since
descriptions of time.

all prepositions.

parse the part after "is"
get the nouns
and their inferences.



one action can connect to other actions, the popup should help you to get that

-1 week.


3)actions module, action class, after and before hooks.
-2 weeks

create.
change

patient can create an appointment
		
		date
		doctor
			- patients seen
			- name
			- qualification

		reason for appointment
		duration of appointment


doctor can see a patient

		- this will commit into the patient
		- under seen -> doctor with a timestamp.
		- after this action
			- add charges to bill
				add charges -> to bill


4)rules:
			
-

		doctor allotment rules:

		if reason for appointment is "z" -> doctor is the one who has seen the least number of patients since morning.

		--correlate everything possible, and let the user decide
		need to add action.


		appointment duration rules:
		
		if reason_for_appointment is "x" -> duration is
											 
		if reason for appointment is "y" -> duration is
											



5)process module, process class.



5)independent modules


6)query parsers


--------------

  ##the centralized api is to deal with sentences being typed in.
  ##it will analyze the sentence for presence of things.
  ##the actions and rules api, will be present on the things itself.
  ##the rules will also come from typing.

  ##the thing can also have processes.
  ##for example:
  
  ##APPOINTMENT PROCESS 1:

  ##patient comes for appointment - log, commit, publish
  ##patient visits first consultant - log, commit, publish
  ##patient is advised several tests by doctor- log, commit, publish
  ##patient does each test
  ##patient visits first consultant
  ##patient visits superconsultant
  ##patient is advised prescriptions
  ##doctor sets charges for patient.
  ##patient visits reception
  ##patient pays charges
  ##patient leaves

  ##but rules can be applied either to all actions or certain actions.
  ##thing can have actions -> these are the things that the api has to 
  ##be responsive to, and the ui will revolve around these.

  ##these actions can have rules.

  ##the rules can involve not only the current thing, but also other things

  ##the rules can involve attributes from the current thing, as well 
  ##as other things.

  ##the actions have hooks.

  ##before, after and during

  ##default things that happen in before and after and during actions, 
  ##are publish, commmit and log.
  ##other actions can also be triggered.


  ##all data stored in things, can be searched.

------------

##thing has two fields
  ##name and es_type
  ##es_type has to be generated on initialization, together with id.
  ##it can be a simply name_time_of_creation,
  ##so that after initialization code can be shifted to a concern.
  
  ##after_save has to update the mapping of es_type
  ##the schema can contain array of node objects.
  ##these node objects should respect the jsonForm criteria.
  ##if a particular field is to have subfields.
  ##then it should become a new type.
  ##now while rendering this 
  ##the option to add that particular sub thing, should be 
  ##rendering a partial with that 
  ##so there will have to be stored, the thing id for that sub-thing.
  ##so instead of this , why not make all subfields as things only.
  ##?